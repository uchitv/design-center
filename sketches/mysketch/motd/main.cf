body file control
{
      namespace => "cfdc_motd";
}

bundle agent myentry(runenv, metadata, motd, motd_path, prepend_command, dynamic_path, symlink_path)
{
  vars:
      "vars" slist => { "@(default:$(runenv).env_vars)" };
      "$(vars)" string => "$(default:$(runenv).$(vars))";

    not_test::
      "owner"
      string => "root",
      comment => "Owner of the MotD files";

      "path_prefix"
      string => "",
      comment => "Prefix to file paths";

    activated::
      "main_path"
      string => "$(path_prefix)$(motd_path)",
      comment => "Path of the main MotD (typical the only one)";

    activated.!(skip_prepend|split_content)::
      "main_lines"
      slist => { $(output), $(motd) },
      comment => "Lines to print to the MotD";

  classes:
      "$(vars)" expression => "default:runenv_$(runenv)_$(vars)";
      "not_$(vars)" expression => "!default:runenv_$(runenv)_$(vars)";

  files:
      "$(main_path)"
      pathtype => "literal",
      create => "true",
      move_obstructions => "true",
      edit_defaults => default:empty,
      edit_line => default:insert_lines($(main_lines)),
      perms => default:mog("444",$(owner),$(owner)),
      handle => "files_main",
      classes => default:classes_generic("files_main"),
      comment => "Create and populate the static motd file";


  methods:
    verbose::
      "metadata" usebundle => default:report_metadata($(this.bundle), $(metadata)),
      inherit => "true";

  reports:
    verbose::
      "$(this.bundle): imported environment '$(runenv)' var '$(vars)' with value '$($(vars))'";
      "$(this.bundle): imported environment '$(runenv)' class '$(vars)' because 'default:runenv_$(runenv)_$(vars)' was defined"
      ifvarclass => "$(vars)";

      # use the "verbose" context to show the sketch operation (for the user)
    verbose::
      "$(this.bundle): running in verbose mode";

      # use the "test" context to help debug the sketch (for the developer)
    test::
      "$(this.bundle): running in test mode";
      "$(this.bundle): owner = $(owner)";
      "$(this.bundle): output = $(output)" ifvarclass => "!skip_prepend";
      "$(this.bundle): main_path = $(main_path)";
      "$(this.bundle): main_lines = $(main_lines)";
      "$(this.bundle): output_path = $(output_path)" ifvarclass => "split_content";
      "$(this.bundle): symlink_link = $(symlink_link)" ifvarclass => "create_symlink";
}
